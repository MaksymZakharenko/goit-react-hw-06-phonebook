{"version":3,"sources":["components/Filter/Filter.module.css","components/Contacts.module.css","redux/contacts/contacts.actions.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/Contacts.js","App.js","redux/contacts/contacts.reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","addNewToList","createAction","deletedItem","filterChange","mapDispatchToProps","handleDelete","connect","state","items","formattedFilter","filter","toLowerCase","trim","item","name","includes","className","styles","ul","map","id","number","textContent","btn","type","onClick","handleChange","block","title","input","onChange","evt","target","value","ContactForm","handleSubmit","props","some","alert","newContact","uuidv4","setState","onSubmit","preventDefault","form","this","pattern","required","Component","App","titleContact","Contacts","mainReducer","createReducer","action","payload","store","createStore","contactsReducer","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d4593c5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Filter_block__37HM-\",\"title\":\"Filter_title__1k3OU\",\"input\":\"Filter_input__1M_f9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Contacts_title__qPv_k\",\"titleContact\":\"Contacts_titleContact__2cKFs\",\"block\":\"Contacts_block__2UIsz\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addNewToList = createAction(\"list/addToList\");\r\nconst deletedItem = createAction(\"list/deletedItem\");\r\nconst filterChange = createAction(\"filter/filterChange\");\r\n\r\n\r\nexport { addNewToList, deletedItem, filterChange };\r\n\r\n// import {\r\n//   ADD_NEW_CONTACT,\r\n//   REMOVE_CONTACT,\r\n//   FILTER_CONTACT,\r\n// } from \"./contacts.constans\";\r\n\r\n// const addNewContacts = (payload) => {\r\n//   return {\r\n//     type: ADD_NEW_CONTACT,\r\n//     payload,\r\n//   };\r\n// };\r\n\r\n// const removeContacts = (payload) => {\r\n//   return {\r\n//     type: REMOVE_CONTACT,\r\n//     payload,\r\n//   };\r\n// };\r\n\r\n// const filterContacts = (payload) => {\r\n//   return {\r\n//     type: FILTER_CONTACT,\r\n//     payload: payload.target.value,\r\n//   };\r\n// };\r\n\r\n// export { addNewContacts, removeContacts, filterContacts };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deletedItem } from \"../../redux/contacts/contacts.actions\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ items, handleDelete }) => {\r\n  return (\r\n    <ul className={styles.ul}>\r\n      {items.map(({ id, name, number }) => (\r\n        <li key={id} className={styles.textContent}>\r\n          <p>\r\n            {name}: {number}\r\n          </p>\r\n          <button\r\n            className={styles.btn}\r\n            type=\"button\"\r\n            onClick={() => handleDelete(id)}\r\n          >\r\n            X\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  items: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { items, filter } = state;\r\n\r\n  const formattedFilter = filter.toLowerCase().trim();\r\n  const filteredItems = items.filter((item) =>\r\n    item.name.toLowerCase().includes(formattedFilter)\r\n  );\r\n  return {\r\n    items: filteredItems,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  handleDelete: deletedItem,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n\r\n// import PropTypes from \"prop-types\";\r\n// import ContactsListItem from \"../ContactListItem/ContactListItem\";\r\n// import styles from \"./ContactList.module.css\";\r\n\r\n// const ContactsList = ({ items, handleDelete }) => {\r\n//   return (\r\n//     <>\r\n//       <ul className={styles.ul}>\r\n//         {items.map((item) => (\r\n//           <ContactsListItem\r\n//             key={item.id}\r\n//             item={item}\r\n//             handleDelete={() => handleDelete(item.id)}\r\n//           />\r\n//         ))}\r\n//       </ul>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// ContactsList.propTypes = {\r\n//   items: PropTypes.arrayOf(PropTypes.shape({ id: PropTypes.string.isRequired }))\r\n//     .isRequired,\r\n//   handleDelete: PropTypes.func.isRequired,\r\n// };\r\n\r\n// export default ContactsList;\r\n","import React from \"react\";\r\nimport styles from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { filterChange } from \"../../redux/contacts/contacts.actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Filter = ({ filter, handleChange }) => {\r\n  const onChange = (evt) => {\r\n    handleChange(evt.target.value);\r\n  };\r\n  return (\r\n    <div className={styles.block}>\r\n      <h2 className={styles.title}>Find contacts by name</h2>\r\n      <input\r\n        className={styles.input}\r\n        id=\"filter\"\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        onChange={onChange}\r\n        value={filter}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  handleChange: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    filter: state.filter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  handleChange: filterChange,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\n// import PropTypes from \"prop-types\";\r\n// import styles from \"./Filter.module.css\";\r\n\r\n// const Filter = ({ handleChange, filter }) => {\r\n//   return (\r\n//     <div className={styles.block}>\r\n//       <label className={styles.title} htmlFor=\"filter\">Find contacts by name:</label>\r\n//       <input\r\n//         id=\"filter\"\r\n//         name=\"filter\"\r\n//         type=\"text\"\r\n//         className={styles.input}\r\n//         onChange={handleChange}\r\n//         value={filter}\r\n//       />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// Filter.propTypes = {\r\n//   handleChange: PropTypes.func.isRequired,\r\n//   filter: PropTypes.string.isRequired,\r\n// };\r\n\r\n// export default Filter;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport { addNewToList } from \"../../redux/contacts/contacts.actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    handleSubmit: PropTypes.func.isRequired,\r\n  };\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleSubmit = (name, number) => {\r\n    const isDuplicate = this.props.items.some((item) => item.name === name);\r\n\r\n    if (isDuplicate) {\r\n      alert(name + \" is already in contacts \");\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      id: uuidv4(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n\r\n    this.props.addNewToList(newContact);\r\n  };\r\n\r\n  handleChange = (evt) => {\r\n    this.setState({\r\n      [evt.target.name]: evt.target.value,\r\n    });\r\n  };\r\n\r\n  onSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    this.handleSubmit(this.state.name, this.state.number);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <form className={styles.form} onSubmit={this.onSubmit}>\r\n          <span className={styles.title}>Name</span>\r\n          <input\r\n            onChange={this.handleChange}\r\n            value={this.state.name}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n          <span className={styles.title}>Number</span>\r\n          <input\r\n            name=\"number\"\r\n            type=\"tel\"\r\n            onChange={this.handleChange}\r\n            value={this.state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n          <button className={styles.btn} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    items: state.items,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addNewToList,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n\r\n// import React, { Component } from \"react\";\r\n// import { v4 as uuid } from \"uuid\";\r\n// import PropTypes from \"prop-types\";\r\n// import styles from \"./ContactForm.module.css\";\r\n\r\n// class ContactForm extends Component {\r\n//   static propTypes = {\r\n//     handleSubmit: PropTypes.func.isRequired,\r\n//   };\r\n\r\n//   state = {\r\n//     id: uuid(),\r\n//     name: \"\",\r\n//     number: \"\",\r\n//   };\r\n\r\n//   handleChange = (evt) => {\r\n//     this.setState({ [evt.target.name]: evt.target.value });\r\n//   };\r\n\r\n//   onSubmit = (evt) => {\r\n//     evt.preventDefault();\r\n\r\n//     this.props.handleSubmit(this.state);\r\n\r\n//     this.setState({ name: \"\", number: \"\" });\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <>\r\n//         <form className={styles.form} onSubmit={this.onSubmit}>\r\n//           <span className={styles.title}>Name</span>\r\n//           <input\r\n//             onChange={this.handleChange}\r\n//             value={this.state.name}\r\n//             type=\"text\"\r\n//             name=\"name\"\r\n//             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n//             title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n//             required\r\n//           />\r\n//           <span className={styles.title}>Number</span>\r\n//           <input\r\n//             name=\"number\"\r\n//             type=\"tel\"\r\n//             onChange={this.handleChange}\r\n//             value={this.state.number}\r\n//             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n//             title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n//             required\r\n//           />\r\n//           <button className={styles.btn} type=\"submit\">\r\n//             Add contact\r\n//           </button>\r\n//         </form>\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default ContactForm;\r\n","import React from \"react\";\r\nimport ContactList from \"./ContactList/ContactList\";\r\nimport Filter from \"./Filter/Filter\";\r\nimport ContactForm from \"./ContactForm/ContactForm\";\r\nimport styles from \"./Contacts.module.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className={styles.title}>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2 className={styles.titleContact}>Contacts</h2>\r\n      <div className={styles.block}>\r\n        <Filter />\r\n        <ContactList />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n// import { Component } from \"react\";\r\n// import { v4 as uuid } from \"uuid\";\r\n// import ContactForm from \"./ContactForm/ContactForm\";\r\n// import Filter from \"./Filter/Filter\";\r\n// import ContactsList from \"./ContactList/ContactList\";\r\n// import styles from \"./Contacts.module.css\";\r\n// import { connect } from \"react-redux\";\r\n// import {\r\n//   addNewContacts,\r\n//   removeContacts,\r\n//   filterContacts,\r\n// } from \"../redux/contacts/contacts.actions\";\r\n\r\n// class Contacts extends Component {\r\n//   state = {\r\n// items: [],\r\n// filter: \"\",\r\n// };\r\n// handleDelete = (id) => {\r\n//   this.setState((prevState) => ({\r\n//     items: prevState.items.filter((item) => item.id !== id),\r\n//   }));\r\n// };\r\n\r\n// handleChange = (evt) => {\r\n//   this.setState({ [evt.target.name]: evt.target.value });\r\n// };\r\n\r\n// handleSubmit = (term) => {\r\n//   if (!term) {\r\n//     alert(\"Поле не может быть пустым!\");\r\n//     return;\r\n//   }\r\n\r\n//   const isDuplicate = this.props.items.some(\r\n//     (item) => item.name === term.name\r\n//   );\r\n//   if (isDuplicate) {\r\n//     alert(\"Контакт: \" + term.name + \" уже существует \");\r\n//     return;\r\n//   }\r\n\r\n//   const newContact = {\r\n//     id: uuid(),\r\n//     name: term.name,\r\n//     number: term.number,\r\n//   };\r\n\r\n//   this.props.addNewContacts(newContact);\r\n\r\n// this.setState((prevState) => {\r\n//   const newItems = [newTodo, ...prevState.items];\r\n//   return { items: newItems };\r\n// });\r\n// };\r\n\r\n// render() {\r\n//   const { items, filter } = this.props;\r\n// const formattedFilter = filter.toLowerCase().trim();\r\n// const filteredItems = items.filter((item) =>\r\n//   item.name.toLowerCase().includes(formattedFilter)\r\n// );\r\n// const { filter } = this.state;\r\n//     return (\r\n//       <div className=\"container\">\r\n//         <h1 className={styles.title}>Phonebook</h1>\r\n//         <ContactForm handleSubmit={this.handleSubmit} />\r\n//         <h2 className={styles.titleContact}>Contacts</h2>\r\n//         <div className={styles.block}>\r\n//           <Filter filter={filter} handleChange={this.props.handleChange} />\r\n//           <ContactsList\r\n//             items={items}\r\n//             handleDelete={this.props.handleDelete}\r\n//           />\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// const mapState = (state) => {\r\n//   const items = state.items;\r\n//   const filter = state.filter;\r\n\r\n//   const formattedFilter = filter.toLowerCase().trim();\r\n//   const filteredItems = items.filter((item) =>\r\n//     item.name.toLowerCase().includes(formattedFilter)\r\n//   );\r\n//   return {\r\n//     items: filteredItems,\r\n//     filter: state.filter,\r\n//   };\r\n// };\r\n\r\n// const mapDispatchToProps = {\r\n//   addNewContacts,\r\n//   handleDelete: removeContacts,\r\n//   handleChange: filterContacts,\r\n// };\r\n\r\n// export default connect(mapState, mapDispatchToProps)(Contacts);\r\n","import React from \"react\";\nimport Contacts from \"./components/Contacts\";\n\n\nconst App = () => {\n  return (\n    <div className=\"block\">\n      <Contacts />\n    </div>\n  );\n};\n\nexport default App;","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { addNewToList, deletedItem, filterChange } from \"./contacts.actions\";\r\n\r\nconst initialState = {\r\n  items: [],\r\n  filter: \"\",\r\n};\r\n\r\nconst mainReducer = createReducer(initialState, {\r\n  [addNewToList]: (state, action) => ({\r\n    ...state,\r\n    items: [action.payload, ...state.items],\r\n  }),\r\n  [deletedItem]: (state, action) => ({\r\n    ...state,\r\n    items: state.items.filter((item) => item.id !== action.payload),\r\n  }),\r\n  [filterChange]: (state, action) => ({\r\n    ...state,\r\n    filter: action.payload,\r\n  }),\r\n});\r\n\r\nexport default mainReducer;\r\n\r\n// import {\r\n//   ADD_NEW_CONTACT,\r\n//   FILTER_CONTACT,\r\n//   REMOVE_CONTACT,\r\n// } from \"./contacts.constans\";\r\n\r\n// const initialState = {\r\n//   items: [],\r\n//   filter: \"\",\r\n// };\r\n\r\n// const contactsReducer = (state = initialState, action) => {\r\n//   switch (action.type) {\r\n//     case ADD_NEW_CONTACT:\r\n//       return {\r\n//         ...state,\r\n//         items: [action.payload, ...state.items],\r\n//       };\r\n//     case REMOVE_CONTACT:\r\n//       return {\r\n//         ...state,\r\n//         items: state.items.filter((item) => item.id !== action.payload),\r\n//       };\r\n//     case FILTER_CONTACT:\r\n//       return {\r\n//         ...state,\r\n//         filter: action.payload,\r\n//       };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// export default contactsReducer;\r\n","import { createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport contactsReducer from \"./contacts/contacts.reducer\";\r\n\r\nconst store = createStore(contactsReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2h61j\",\"title\":\"ContactForm_title__2VrM8\",\"btn\":\"ContactForm_btn__2fOmX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"ContactList_ul__c6O5c\",\"btn\":\"ContactList_btn__1rhrs\",\"textContent\":\"ContactList_textContent__2qE7N\"};"],"sourceRoot":""}